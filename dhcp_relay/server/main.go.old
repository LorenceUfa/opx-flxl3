package main

import (
	"dhcprelayd"
	//"flag"
	"git.apache.org/thrift.git/lib/go/thrift"
	"fmt"
    "time"
	//"os"
)

type HelloHandler struct {

}

func (*HelloHandler) Hello(request *dhcprelayd.HelloRequest) (*dhcprelayd.HelloResponse, error) {

    resp := dhcprelayd.NewHelloResponse()
    resp.Message = request.Message
    fmt.Printf("%d - %d\n", time.Now().UnixNano(), request.Message)
    return resp, nil
}

func NewHelloHandler() dhcprelayd.Hello {
    return new(HelloHandler)
}

func main() {
    var transport thrift.TServerTransport
    var err error
    	var addr = "localhost:7000"

    transport, err = thrift.NewTServerSocket(addr)
    	if err != nil {
		fmt.Printf("Failed to create Socket with:", addr)
	}
    //paramsDir := flag.String("params", "", "Directory Location for config files")
    //fmt.Printf("%s\n", paramsDir)
    // Create a handler
    handler := NewHelloHandler()

    // Create a processor
    processor := dhcprelayd.NewHelloProcessor(handler)

    // create transport and protocol for server
    	transportFactory := thrift.NewTBufferedTransportFactory(8192)
	protocolFactory := thrift.NewTBinaryProtocolFactoryDefault()
    fmt.Printf("%T\n", transport)
	fmt.Printf("Starting DHCP-RELAY daemon\n")
    server := thrift.NewTSimpleServer4(processor, transport, transportFactory, protocolFactory)
    //RunClient(transportFactory, protocolFactory, addr)
    server.Serve()
}
